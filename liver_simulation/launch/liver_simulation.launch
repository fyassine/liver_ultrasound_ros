<launch>
  <!-- Arguments -->
  <arg name="model" default="iiwa7"/>
  <arg name="robot_name" default="iiwa"/>
  <!-- Choose which hardware interface (PositionJointInterface | EffortJointInterface | VelocityJointInterface) is exported to Gazebo/ros_control -->
  <arg name="hardware_interface" default="PositionJointInterface" />
  <!-- Optional legacy override kept for compatibility with older usage -->
  <arg name="trajectory_interface" default="" />
  <!-- Whether to also load individual per-joint controllers (false keeps things lighter) -->
  <arg name="load_single_joint" default="false" />
  <!-- Whether to start Gazebo paused (true = robot won't move until unpaused) -->
  <arg name="paused" default="false" />

  <!-- Gazebo world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find liver_simulation)/worlds/liver_sim.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
  </include>

  <!-- Upload URDF (places robot_description param) -->
  <include file="$(find ultrasound_probe_description)/launch/iiwa7_ultrasound_probe_upload.launch">
    <arg name="hardware_interface" value="$(eval arg('trajectory_interface') if arg('trajectory_interface') else arg('hardware_interface'))"/>
    <arg name="robot_name" value="$(arg robot_name)" />
  </include>

  <!-- Also push the URDF into the controller namespace so gazebo_ros_control can resolve it -->
  <group ns="$(arg robot_name)">
    <include file="$(find ultrasound_probe_description)/launch/iiwa7_ultrasound_probe_upload.launch">
      <arg name="hardware_interface" value="$(eval arg('trajectory_interface') if arg('trajectory_interface') else arg('hardware_interface'))"/>
      <arg name="robot_name" value="$(arg robot_name)" />
    </include>
  </group>

  <!-- Spawn model at table pose -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" output="screen"
        args="-urdf -model $(arg robot_name) -param robot_description -x 0.0 -y 0.0 -z 0.5" />

  <!-- Controllers namespace -->
  <group ns="$(arg robot_name)">
    <!-- Conditionally choose controllers argument -->
    <group if="$(arg load_single_joint)">
      <include file="$(find iiwa_control)/launch/iiwa_control.launch">
        <arg name="hardware_interface" value="$(eval arg('trajectory_interface') if arg('trajectory_interface') else arg('hardware_interface'))" />
        <arg name="controllers" value="$(eval 'joint_state_controller ' + (arg('trajectory_interface') if arg('trajectory_interface') else arg('hardware_interface')) + '_trajectory_controller ' + ' '.join([(arg('trajectory_interface') if arg('trajectory_interface') else arg('hardware_interface')) + '_J{}_controller'.format(i) for i in range(1,8)]))" />
        <arg name="robot_name" value="$(arg robot_name)" />
        <arg name="model" value="$(arg model)" />
      </include>
    </group>
    <group unless="$(arg load_single_joint)">
      <include file="$(find iiwa_control)/launch/iiwa_control.launch">
        <arg name="hardware_interface" value="$(eval arg('trajectory_interface') if arg('trajectory_interface') else arg('hardware_interface'))" />
        <arg name="controllers" value="$(eval 'joint_state_controller ' + (arg('trajectory_interface') if arg('trajectory_interface') else arg('hardware_interface')) + '_trajectory_controller')" />
        <arg name="robot_name" value="$(arg robot_name)" />
        <arg name="model" value="$(arg model)" />
      </include>
    </group>
  </group>

  <!-- Publish static TF for world camera optical frame -->
  <node pkg="tf" type="static_transform_publisher" name="world_camera_tf_broadcaster"
    args="1 1 2 -2.35619449 0.9 0 world world_camera_optical_frame 100" />
</launch>