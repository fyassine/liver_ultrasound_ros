<launch>
  <!-- Arguments -->
  <arg name="robot_name" default="iiwa"/>
  <arg name="model" default="iiwa7_ultrasound_probe"/>
  <arg name="hardware_interface" default="PositionJointInterface"/>
  <arg name="rviz" default="true"/>
  <arg name="paused" default="false"/>

  <!-- Remap topics to match the namespaced robot -->
  <remap from="/$(arg hardware_interface)_trajectory_controller/follow_joint_trajectory" 
         to="/$(arg robot_name)/$(arg hardware_interface)_trajectory_controller/follow_joint_trajectory" />
  <remap from="robot_description" to="/$(arg robot_name)/robot_description" /> 
  <remap from="/get_planning_scene" to="/$(arg robot_name)/get_planning_scene" /> 

  <!-- Upload robot URDF to parameter server -->
  <include file="$(find ultrasound_probe_description)/launch/iiwa7_ultrasound_probe_upload.launch">
    <arg name="hardware_interface" value="$(arg hardware_interface)"/>
    <arg name="robot_name" value="$(arg robot_name)" />
  </include>

  <!-- Also upload to the namespaced parameter for MoveIt -->
  <group ns="$(arg robot_name)">
    <include file="$(find ultrasound_probe_description)/launch/iiwa7_ultrasound_probe_upload.launch">
      <arg name="hardware_interface" value="$(arg hardware_interface)"/>
      <arg name="robot_name" value="$(arg robot_name)" />
    </include>
  </group>

  <!-- Include the Gazebo simulation with liver environment -->
  <!-- DISABLED: Uncomment to enable Gazebo simulation -->
  <include file="$(find liver_simulation)/launch/liver_simulation.launch">
    <arg name="robot_name" value="$(arg robot_name)"/>
    <arg name="model" value="$(arg model)"/>
    <arg name="hardware_interface" value="$(arg hardware_interface)"/>
    <arg name="paused" value="$(arg paused)"/>
  </include>


  <!-- Load MoveIt! move_group in the robot's namespace -->
  <group ns="$(arg robot_name)">
    <!-- Publish fake joint states - ONLY for fake execution mode (Gazebo disabled) -->
    <!-- DISABLED: Uncomment when Gazebo is disabled
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="use_gui" value="false"/>
      <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    </node>
    -->

    <include file="$(find iiwa_moveit)/launch/move_group.launch">
      <arg name="publish_monitored_planning_scene" value="true" />
      <arg name="hardware_interface" value="$(arg hardware_interface)"/>
      <arg name="robot_name" value="$(arg robot_name)"/>
      <arg name="model" value="$(arg model)" />
      <arg name="load_robot_description" value="false" />
      <arg name="fake_execution" value="false" />
    </include>

    <!-- Run RViz for visualization -->
    <include if="$(arg rviz)" file="$(find iiwa_moveit)/launch/moveit_rviz.launch">
      <arg name="config" value="true"/>
    </include>

    <node pkg="liver_simulation" type="pointcloud_aligner.py" name="pointcloud_aligner" output="screen" launch-prefix="bash -c 'sleep 5.0; $0 $@' ">
      <param name="target_frame" value="probe_link_ee"/>
      <param name="world_topic" value="/world_camera/depth/points"/>
      <param name="wrist_topic" value="/$(arg robot_name)/wrist_camera/depth/points"/>
      <param name="world_aligned_topic" value="world_camera/depth/aligned"/>
      <param name="wrist_aligned_topic" value="wrist_camera/depth/aligned"/>
    </node>

  </group>

    <!-- Ultrasound Scan Simulator -->
  <node pkg="liver_simulation" type="scan_simulator.py" name="scan_simulator" output="screen">
    <param name="robot_name" value="$(arg robot_name)"/>
    <param name="contact_threshold" value="3.0"/>  <!-- Higher threshold to require sustained force -->
    <param name="debounce_samples" value="3"/>     <!-- Smaller window: need 3 out of 5 samples -->
    <param name="publish_rate" value="30.0"/>
  </node>

  <!-- Publish scene objects to MoveIt! planning scene -->
  <!-- This node reads from config/scene_objects.yaml and adds collision objects -->
  <node name="scene_publisher" pkg="liver_simulation" type="add_collision_objects.py" output="screen">
    <!-- Give move_group time to start before publishing scene -->
    <param name="start_delay" value="5.0" />
    <param name="robot_name" value="$(arg robot_name)" />
  </node>

  <!-- Launch the surface follower node -->
  <node name="surface_follower" pkg="liver_simulation" type="surface_follower.py" output="screen">
    <param name="robot_name" value="$(arg robot_name)" />
  </node>

  
</launch>
